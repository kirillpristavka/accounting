// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum OrgType {
  PHYSICAL
  LEGAL
}

enum PhysicalType {
  SELF_EMPLOYED
  IP
}

model Organization {
  id           Int                      @id @default(autoincrement())
  name         String
  prefix       String?
  inn          String?
  taxation     String?
  type         OrgType
  physicalType PhysicalType?
  selfEmployed SelfEmployed?

  goodsDocuments GoodsBalanceDocument[]  @relation("OrgToGoodsDocs")
}

model SelfEmployed {
  orgId        Int    @id
  lastName     String
  firstName    String
  middleName   String?
  organization Organization @relation(fields: [orgId], references: [id], onDelete: Cascade)
}

model Nomenclature {
  id           Int     @id @default(autoincrement())
  type         String
  name         String
  fullName     String?
  marking      String?
  article      String?
  group        String?
  unit         String
  vat          String?
  country      String?
  manufacturer String?
  comment      String?
  hideInLists  Boolean @default(false)
}

// ──────────────────────────────────────────────────────────────────────────────

/// вот новый модель для плана счетов
model Account {
  id         Int     @id @default(autoincrement())
  code       String  @unique
  name       String
  offBalance Boolean @default(false)  // false = основные, true = забалансовые
}

model GoodsBalanceDocument {
  id         Int       @id @default(autoincrement())
  number     Int       @unique
  date       DateTime
  orgId      Int
  comment    String?
  responsible String?
  entries    GoodsBalanceEntry[]

  organization Organization @relation("OrgToGoodsDocs", fields: [orgId], references: [id])
}

model GoodsBalanceEntry {
  id          Int    @id @default(autoincrement())
  documentId  Int
  account     String
  name        String
  warehouse   String
  quantity    Float
  cost        Float
  country     String?
  customs     String?
  unit        String?

  document GoodsBalanceDocument @relation(fields: [documentId], references: [id])
}
